

//given -inicjacja wszystkiego do testu
nie zawsze musi byc

assertThat - jak czerwony to
alt enter i import

assertThrows(ArithmeticException.class,
            () -> calculator.divide(2, 0), "Cannot divide by 0");
            z lambd ale poki co zapamietac

            isInstanceOf(ArithmeticException.class);    //do sprawdzenia typow

task4

ctrl lewy klik - podglad metod

TDD - test driven development - najpierw testy potem dopisanie kodu (ale tylko dot, danego testu)
np najpierw null i zeby był true, test passes to refactor
//red (za 1 razem failed), green (implementacja aby wczesniejszy test byl pozytywny), blue

//parametryzacja testów

w metodach testowych raczej bez ifów i petli

  @ParameterizedTest
    void isBlank() {

    input.equals("STOP") - tu mamy obiekt ktory moze byc nullem
    i byc null pointer exception
    ("STOP").equals.input - tu ok bedzie



    ctrl shift  kod dora/dół
    nie gubi nawiasów